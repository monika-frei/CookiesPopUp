(()=>{"use strict";const e=e=>document.cookie.split(";").map((e=>e.split("="))).reduce(((e,t)=>Object.assign(Object.assign({},e),{[t[0].trim()]:t[1]})),{})[e],t=(e,t)=>{document.cookie=`${e} = ${t}`};var s;!function(e){e.Start="afterbegin",e.End="beforeend"}(s||(s={}));const n="gdpr_consent";new class extends class{constructor(e,t,s,n){this.templateElement=document.getElementById(e),this.hostElement=document.getElementById(t);const i=document.importNode(this.templateElement.content,!0);this.element=i.firstElementChild,s&&(this.element.id=s),this.attach(n)}attach(e){this.hostElement.insertAdjacentElement(e,this.element)}}{constructor(i,d){super("popup","app",i,s.End),this.acceptVendorHandler=(e,t)=>{const s=document.getElementById(t);this.acceptedVendors.includes(e)?(this.acceptedVendors=this.acceptedVendors.filter((t=>t!==e&&t)),s.classList.remove("accepted")):(this.acceptedVendors.push(e),s.classList.add("accepted"))},this.shouldShowPopUp=()=>{e(n)||(this.hostElement.classList.remove("hidden"),this.appElement.classList.add("unactive"),this.bodyElement.classList.add("unactive-scroll"))},this.saveToStorage=e=>{let s=new Date(Date.now()+864e5);s=s.toUTCString(),t(n,e?"accepted,"+this.acceptedVendorsList+";expires="+s+";secure = true":"rejected;secure = true"),this.hostElement.classList.add("hidden"),this.appElement.classList.remove("unactive"),this.bodyElement.classList.remove("unactive-scroll")},this.hostElement=document.getElementById(i),this.appElement=document.getElementById("app"),this.contentWrapperElement=document.getElementsByClassName("popup-content")[0],this.bodyElement=document.getElementsByTagName("body")[0],this.contentWrapperElement.id="vendors-list",this.popupHeadingElement=this.hostElement.getElementsByClassName("popup-heading")[0],this.popupHeadingElement.innerHTML=d,this.acceptedVendors=[],fetch("https://optad360.mgr.consensu.org/cmp/v2/vendor-list.json").then((e=>{if(!e.ok)throw new Error(e.statusText);return e.json().then((e=>e))})).catch((e=>{throw e})).then((e=>{const t=e.vendors;Object.keys(t).forEach((e=>{if(t[e].usesCookies){const s="vendor-element",n=t[e].name,i=t[e].policyUrl,d="acceptance-button",l=t[e].id;new class{constructor(e,t,s,n,i,d,l,c){this.hostElement=document.getElementById(e),this.divElement=document.createElement("div"),this.pElement=document.createElement("p"),this.linkElement=document.createElement("a"),this.buttonElement=document.createElement("button"),d&&(this.divElement.classList.add(d),this.divElement.classList.add("unblurred")),this.pElement.innerHTML=t,this.pElement.classList.add("unblurred"),this.linkElement.innerHTML=s,this.linkElement.href=n,this.linkElement.classList.add("unblurred"),l&&(this.buttonElement.classList.add(l),this.buttonElement.classList.add("unblurred")),c&&(this.buttonElement.id=c),this.buttonElement.addEventListener("click",i),this.hostElement.appendChild(this.divElement),this.divElement.appendChild(this.pElement),this.pElement.appendChild(this.linkElement),this.divElement.appendChild(this.buttonElement)}}("vendors-list",n,i,i,(()=>this.acceptVendorHandler(n,l)),s,d,l)}}))}));const l=this.hostElement.getElementsByClassName("reject-button")[0],c=this.hostElement.getElementsByClassName("accept-button")[0];l.addEventListener("click",(()=>this.saveToStorage(!1))),c.addEventListener("click",(()=>this.saveToStorage(!0))),this.shouldShowPopUp()}get acceptedVendorsList(){return this.acceptedVendors}}("cookie-popup","GDPR consent")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb29raWVzcG9wdXAvLi9zcmMvc3RvcmFnZS9jb29raWVTdG9yYWdlLnRzIiwid2VicGFjazovL2Nvb2tpZXNwb3B1cC8uL3NyYy9pbnRlcmZhY2VzL2luZGV4LnRzIiwid2VicGFjazovL2Nvb2tpZXNwb3B1cC8uL3NyYy9jb21wb25lbnRzL2Nvb2tpZVBvcHVwLWNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly9jb29raWVzcG9wdXAvLi9zcmMvYXBwLnRzIiwid2VicGFjazovL2Nvb2tpZXNwb3B1cC8uL3NyYy9jb21wb25lbnRzL3BvcHVwLWNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly9jb29raWVzcG9wdXAvLi9zcmMvdXRpbHMvZmV0Y2hJdGVtcy50cyIsIndlYnBhY2s6Ly9jb29raWVzcG9wdXAvLi9zcmMvY29tcG9uZW50cy9jaG9vc2FibGVJdGVtLnRzIl0sIm5hbWVzIjpbImtleSIsImRvY3VtZW50IiwiY29va2llIiwic3BsaXQiLCJtYXAiLCJyZWR1Y2UiLCJvYmoiLCJjdXJyIiwidHJpbSIsInZhbHVlIiwiRWxlbWVudFBvc2l0aW9uIiwiY29va2llUHJvcGVydHlOYW1lIiwidGVtcGxhdGVJZCIsImhvc3RFbGVtZW50SWQiLCJuZXdFbGVtZW50SWQiLCJwb3NpdGlvbiIsInRoaXMiLCJ0ZW1wbGF0ZUVsZW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImhvc3RFbGVtZW50IiwiaW1wb3J0ZWROb2RlIiwiaW1wb3J0Tm9kZSIsImNvbnRlbnQiLCJlbGVtZW50IiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJpZCIsImF0dGFjaCIsImluc2VydEFkamFjZW50RWxlbWVudCIsIm5ld1BvcHVwSWQiLCJwb3B1cFRpdGxlIiwic3VwZXIiLCJFbmQiLCJhY2NlcHRWZW5kb3JIYW5kbGVyIiwibmFtZSIsInZlbmRvckJ1dHRvbiIsImFjY2VwdGVkVmVuZG9ycyIsImluY2x1ZGVzIiwiZmlsdGVyIiwidmVuZG9yIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwicHVzaCIsImFkZCIsInNob3VsZFNob3dQb3BVcCIsImFwcEVsZW1lbnQiLCJib2R5RWxlbWVudCIsInNhdmVUb1N0b3JhZ2UiLCJib29sIiwiZGF0ZSIsIkRhdGUiLCJub3ciLCJ0b1VUQ1N0cmluZyIsImFjY2VwdGVkVmVuZG9yc0xpc3QiLCJjb250ZW50V3JhcHBlckVsZW1lbnQiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwb3B1cEhlYWRpbmdFbGVtZW50IiwiaW5uZXJIVE1MIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJvayIsIkVycm9yIiwic3RhdHVzVGV4dCIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJlcnJvciIsInZlbmRvcnMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsInVzZXNDb29raWVzIiwiZGl2Q2xhc3MiLCJ2ZW5kb3JOYW1lIiwicG9saWN5VXJsIiwiYnV0dG9uQ2xhc3MiLCJ2ZW5kb3JJZCIsInBDb250ZW50IiwibGlua0NvbnRlbnQiLCJsaW5rVXJsIiwiY2FsbGJhY2tGbiIsImJ1dHRvbklkIiwiZGl2RWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJwRWxlbWVudCIsImxpbmtFbGVtZW50IiwiYnV0dG9uRWxlbWVudCIsImhyZWYiLCJhZGRFdmVudExpc3RlbmVyIiwiYXBwZW5kQ2hpbGQiLCJyZWplY3RCdXR0b24iLCJhY2NlcHRCdXR0b24iXSwibWFwcGluZ3MiOiJtQkFBQSxNQWlCQSxFQWhCWUEsR0FDUUMsU0FBU0MsT0FDdEJDLE1BQU0sS0FDTkMsS0FBS0YsR0FBV0EsRUFBT0MsTUFBTSxPQUM3QkUsUUFDQyxDQUFDQyxFQUFVQyxJQUFlLE9BQUQsd0JBQU1ELEdBQUcsQ0FBRSxDQUFDQyxFQUFLLEdBQUdDLFFBQVNELEVBQUssTUFDM0QsSUFFV1AsR0FRbkIsRUFMVyxDQUFDQSxFQUFhUyxLQUNyQlIsU0FBU0MsT0FBUyxHQUFHRixPQUFTUyxLQ0FsQyxJQUFZQyxHQUFaLFNBQVlBLEdBQ1YscUJBQ0Es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b29raWVTdG9yYWdlID0ge1xyXG4gIGdldEl0ZW06IChrZXk6IHN0cmluZykgPT4ge1xyXG4gICAgY29uc3QgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZVxyXG4gICAgICAuc3BsaXQoXCI7XCIpXHJcbiAgICAgIC5tYXAoKGNvb2tpZSkgPT4gY29va2llLnNwbGl0KFwiPVwiKSlcclxuICAgICAgLnJlZHVjZShcclxuICAgICAgICAob2JqOiBhbnksIGN1cnI6IGFueSkgPT4gKHsgLi4ub2JqLCBbY3VyclswXS50cmltKCldOiBjdXJyWzFdIH0pLFxyXG4gICAgICAgIHt9XHJcbiAgICAgICk7XHJcbiAgICByZXR1cm4gY29va2llc1trZXldO1xyXG4gIH0sXHJcblxyXG4gIHNldEl0ZW06IChrZXk6IHN0cmluZywgdmFsdWU6IHN0cmluZykgPT4ge1xyXG4gICAgZG9jdW1lbnQuY29va2llID0gYCR7a2V5fSA9ICR7dmFsdWV9YDtcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29va2llU3RvcmFnZTtcclxuIiwiZXhwb3J0IGludGVyZmFjZSBWZW5kb3JMaXN0IHtcclxuICBndmxTcGVjaWZpY2F0aW9uVmVyc2lvbjogbnVtYmVyO1xyXG4gIHZlbmRvckxpc3RWZXJzaW9uOiBudW1iZXI7XHJcbiAgdGNmUG9saWN5VmVyc2lvbjogbnVtYmVyO1xyXG4gIGxhc3RVcGRhdGVkOiBzdHJpbmc7XHJcbiAgcHVycG9zZXM6IGFueTtcclxuICBzcGVjaWFsUHVycG9zZXM6IGFueTtcclxuICBmZWF0dXJlczogYW55O1xyXG4gIHNwZWNpYWxGZWF0dXJlczogYW55O1xyXG4gIHN0YWNrczogYW55O1xyXG4gIHZlbmRvcnM6IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGVudW0gRWxlbWVudFBvc2l0aW9uIHtcclxuICBTdGFydCA9IFwiYWZ0ZXJiZWdpblwiLFxyXG4gIEVuZCA9IFwiYmVmb3JlZW5kXCIsXHJcbn1cclxuIiwiaW1wb3J0IGNvb2tpZVN0b3JhZ2UgZnJvbSBcIi4uL3N0b3JhZ2UvY29va2llU3RvcmFnZVwiO1xyXG5pbXBvcnQgUG9wVXAgZnJvbSBcIi4vcG9wdXAtY29tcG9uZW50XCI7XHJcbmltcG9ydCBDaG9vc2FibGVJdGVtV2l0aEJ1dHRvbiBmcm9tIFwiLi9jaG9vc2FibGVJdGVtXCI7XHJcbmltcG9ydCB7IGZldGNoSXRlbXMgfSBmcm9tIFwiLi4vdXRpbHMvZmV0Y2hJdGVtc1wiO1xyXG5pbXBvcnQgeyBFbGVtZW50UG9zaXRpb24gfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9pbmRleFwiO1xyXG5cclxuY29uc3QgdXJsID0gXCJodHRwczovL29wdGFkMzYwLm1nci5jb25zZW5zdS5vcmcvY21wL3YyL3ZlbmRvci1saXN0Lmpzb25cIjtcclxuY29uc3QgY29va2llUHJvcGVydHlOYW1lID0gXCJnZHByX2NvbnNlbnRcIjtcclxuXHJcbmNsYXNzIENvb2tpZVBvcFVwIGV4dGVuZHMgUG9wVXA8SFRNTERpdkVsZW1lbnQsIEhUTUxEaXZFbGVtZW50PiB7XHJcbiAgcG9wdXBIZWFkaW5nRWxlbWVudDogSFRNTEhlYWRpbmdFbGVtZW50O1xyXG4gIGhvc3RFbGVtZW50OiBIVE1MRGl2RWxlbWVudDtcclxuICBjb250ZW50V3JhcHBlckVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50O1xyXG4gIGFwcEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50O1xyXG4gIGJvZHlFbGVtZW50OiBIVE1MQm9keUVsZW1lbnQ7XHJcblxyXG4gIHByaXZhdGUgYWNjZXB0ZWRWZW5kb3JzOiBzdHJpbmdbXTtcclxuXHJcbiAgY29uc3RydWN0b3IobmV3UG9wdXBJZDogc3RyaW5nLCBwb3B1cFRpdGxlOiBzdHJpbmcpIHtcclxuICAgIHN1cGVyKFwicG9wdXBcIiwgXCJhcHBcIiwgbmV3UG9wdXBJZCwgRWxlbWVudFBvc2l0aW9uLkVuZCk7XHJcbiAgICB0aGlzLmhvc3RFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobmV3UG9wdXBJZCkhIGFzIEhUTUxEaXZFbGVtZW50O1xyXG4gICAgdGhpcy5hcHBFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcHBcIikhIGFzIEhUTUxEaXZFbGVtZW50O1xyXG4gICAgdGhpcy5jb250ZW50V3JhcHBlckVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgICBcInBvcHVwLWNvbnRlbnRcIlxyXG4gICAgKVswXSEgYXMgSFRNTERpdkVsZW1lbnQ7XHJcbiAgICB0aGlzLmJvZHlFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXHJcbiAgICAgIFwiYm9keVwiXHJcbiAgICApWzBdISBhcyBIVE1MQm9keUVsZW1lbnQ7XHJcbiAgICB0aGlzLmNvbnRlbnRXcmFwcGVyRWxlbWVudC5pZCA9IFwidmVuZG9ycy1saXN0XCI7XHJcbiAgICB0aGlzLnBvcHVwSGVhZGluZ0VsZW1lbnQgPSB0aGlzLmhvc3RFbGVtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICAgIFwicG9wdXAtaGVhZGluZ1wiXHJcbiAgICApWzBdISBhcyBIVE1MSGVhZGluZ0VsZW1lbnQ7XHJcbiAgICB0aGlzLnBvcHVwSGVhZGluZ0VsZW1lbnQuaW5uZXJIVE1MID0gcG9wdXBUaXRsZTtcclxuXHJcbiAgICB0aGlzLmFjY2VwdGVkVmVuZG9ycyA9IFtdO1xyXG5cclxuICAgIGZldGNoSXRlbXModXJsKS50aGVuKChkYXRhOiBhbnkpID0+IHtcclxuICAgICAgY29uc3QgdmVuZG9ycyA9IGRhdGEudmVuZG9ycztcclxuICAgICAgY29uc3Qga2V5c0FycmF5ID0gT2JqZWN0LmtleXModmVuZG9ycyk7XHJcbiAgICAgIGtleXNBcnJheS5mb3JFYWNoKChrZXkpID0+IHtcclxuICAgICAgICBpZiAodmVuZG9yc1trZXldLnVzZXNDb29raWVzKSB7XHJcbiAgICAgICAgICBjb25zdCBkaXZDbGFzcyA9IFwidmVuZG9yLWVsZW1lbnRcIjtcclxuICAgICAgICAgIGNvbnN0IHZlbmRvck5hbWUgPSB2ZW5kb3JzW2tleV0ubmFtZTtcclxuICAgICAgICAgIGNvbnN0IHBvbGljeVVybCA9IHZlbmRvcnNba2V5XS5wb2xpY3lVcmw7XHJcbiAgICAgICAgICBjb25zdCBidXR0b25DbGFzcyA9IFwiYWNjZXB0YW5jZS1idXR0b25cIjtcclxuICAgICAgICAgIGNvbnN0IHZlbmRvcklkID0gdmVuZG9yc1trZXldLmlkO1xyXG5cclxuICAgICAgICAgIG5ldyBDaG9vc2FibGVJdGVtV2l0aEJ1dHRvbihcclxuICAgICAgICAgICAgXCJ2ZW5kb3JzLWxpc3RcIixcclxuICAgICAgICAgICAgdmVuZG9yTmFtZSxcclxuICAgICAgICAgICAgcG9saWN5VXJsLFxyXG4gICAgICAgICAgICBwb2xpY3lVcmwsXHJcbiAgICAgICAgICAgICgpID0+IHRoaXMuYWNjZXB0VmVuZG9ySGFuZGxlcih2ZW5kb3JOYW1lLCB2ZW5kb3JJZCksXHJcbiAgICAgICAgICAgIGRpdkNsYXNzLFxyXG4gICAgICAgICAgICBidXR0b25DbGFzcyxcclxuICAgICAgICAgICAgdmVuZG9ySWRcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHJlamVjdEJ1dHRvbiA9IHRoaXMuaG9zdEVsZW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcclxuICAgICAgXCJyZWplY3QtYnV0dG9uXCJcclxuICAgIClbMF0hO1xyXG4gICAgY29uc3QgYWNjZXB0QnV0dG9uID0gdGhpcy5ob3N0RWxlbWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgICBcImFjY2VwdC1idXR0b25cIlxyXG4gICAgKVswXSE7XHJcbiAgICByZWplY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuc2F2ZVRvU3RvcmFnZShmYWxzZSkpO1xyXG4gICAgYWNjZXB0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLnNhdmVUb1N0b3JhZ2UodHJ1ZSkpO1xyXG5cclxuICAgIHRoaXMuc2hvdWxkU2hvd1BvcFVwKCk7XHJcbiAgfVxyXG5cclxuICBhY2NlcHRWZW5kb3JIYW5kbGVyID0gKG5hbWU6IHN0cmluZywgaWQ6IHN0cmluZykgPT4ge1xyXG4gICAgY29uc3QgdmVuZG9yQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpISBhcyBIVE1MQnV0dG9uRWxlbWVudDtcclxuICAgIGlmICh0aGlzLmFjY2VwdGVkVmVuZG9ycy5pbmNsdWRlcyhuYW1lKSkge1xyXG4gICAgICB0aGlzLmFjY2VwdGVkVmVuZG9ycyA9IHRoaXMuYWNjZXB0ZWRWZW5kb3JzLmZpbHRlcihcclxuICAgICAgICAodmVuZG9yKSA9PiB2ZW5kb3IgIT09IG5hbWUgJiYgdmVuZG9yXHJcbiAgICAgICk7XHJcbiAgICAgIHZlbmRvckJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiYWNjZXB0ZWRcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmFjY2VwdGVkVmVuZG9ycy5wdXNoKG5hbWUpO1xyXG4gICAgICB2ZW5kb3JCdXR0b24uY2xhc3NMaXN0LmFkZChcImFjY2VwdGVkXCIpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHNob3VsZFNob3dQb3BVcCA9ICgpID0+IHtcclxuICAgIGlmICghY29va2llU3RvcmFnZS5nZXRJdGVtKGNvb2tpZVByb3BlcnR5TmFtZSkpIHtcclxuICAgICAgdGhpcy5ob3N0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xyXG4gICAgICB0aGlzLmFwcEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInVuYWN0aXZlXCIpO1xyXG4gICAgICB0aGlzLmJvZHlFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ1bmFjdGl2ZS1zY3JvbGxcIik7XHJcbiAgICB9XHJcbiAgfTtcclxuICBzYXZlVG9TdG9yYWdlID0gKGJvb2w6IGJvb2xlYW4pID0+IHtcclxuICAgIGxldCBkYXRlOiBhbnkgPSBuZXcgRGF0ZShEYXRlLm5vdygpICsgODY0MDBlMyk7XHJcbiAgICBkYXRlID0gZGF0ZS50b1VUQ1N0cmluZygpO1xyXG4gICAgY29va2llU3RvcmFnZS5zZXRJdGVtKFxyXG4gICAgICBjb29raWVQcm9wZXJ0eU5hbWUsXHJcbiAgICAgIGJvb2xcclxuICAgICAgICA/IFwiYWNjZXB0ZWQsXCIgK1xyXG4gICAgICAgICAgICB0aGlzLmFjY2VwdGVkVmVuZG9yc0xpc3QgK1xyXG4gICAgICAgICAgICBcIjtleHBpcmVzPVwiICtcclxuICAgICAgICAgICAgZGF0ZSArXHJcbiAgICAgICAgICAgIFwiO3NlY3VyZSA9IHRydWVcIlxyXG4gICAgICAgIDogXCJyZWplY3RlZFwiICsgXCI7c2VjdXJlID0gdHJ1ZVwiXHJcbiAgICApO1xyXG4gICAgdGhpcy5ob3N0RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xyXG4gICAgdGhpcy5hcHBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJ1bmFjdGl2ZVwiKTtcclxuICAgIHRoaXMuYm9keUVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInVuYWN0aXZlLXNjcm9sbFwiKTtcclxuICB9O1xyXG5cclxuICBnZXQgYWNjZXB0ZWRWZW5kb3JzTGlzdCgpIHtcclxuICAgIHJldHVybiB0aGlzLmFjY2VwdGVkVmVuZG9ycztcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvb2tpZVBvcFVwO1xyXG4iLCJpbXBvcnQgQ29va2llUG9wVXAgZnJvbSBcIi4vY29tcG9uZW50cy9jb29raWVQb3B1cC1jb21wb25lbnRcIjtcclxuXHJcbm5ldyBDb29raWVQb3BVcChcImNvb2tpZS1wb3B1cFwiLCBcIkdEUFIgY29uc2VudFwiKTtcclxuIiwiaW1wb3J0IHsgRWxlbWVudFBvc2l0aW9uIH0gZnJvbSBcIi4uL2ludGVyZmFjZXMvaW5kZXhcIjtcclxuXHJcbmNsYXNzIFBvcFVwPFQgZXh0ZW5kcyBIVE1MRWxlbWVudCwgVSBleHRlbmRzIEhUTUxFbGVtZW50PiB7XHJcbiAgdGVtcGxhdGVFbGVtZW50OiBIVE1MVGVtcGxhdGVFbGVtZW50O1xyXG4gIGhvc3RFbGVtZW50OiBUO1xyXG4gIGVsZW1lbnQ6IFU7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgdGVtcGxhdGVJZDogc3RyaW5nLFxyXG4gICAgaG9zdEVsZW1lbnRJZDogc3RyaW5nLFxyXG4gICAgbmV3RWxlbWVudElkOiBzdHJpbmcsXHJcbiAgICBwb3NpdGlvbjogRWxlbWVudFBvc2l0aW9uXHJcbiAgKSB7XHJcbiAgICB0aGlzLnRlbXBsYXRlRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gICAgICB0ZW1wbGF0ZUlkXHJcbiAgICApISBhcyBIVE1MVGVtcGxhdGVFbGVtZW50O1xyXG4gICAgdGhpcy5ob3N0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGhvc3RFbGVtZW50SWQpISBhcyBUO1xyXG4gICAgY29uc3QgaW1wb3J0ZWROb2RlID0gZG9jdW1lbnQuaW1wb3J0Tm9kZShcclxuICAgICAgdGhpcy50ZW1wbGF0ZUVsZW1lbnQuY29udGVudCxcclxuICAgICAgdHJ1ZVxyXG4gICAgKTtcclxuICAgIHRoaXMuZWxlbWVudCA9IGltcG9ydGVkTm9kZS5maXJzdEVsZW1lbnRDaGlsZCBhcyBVO1xyXG4gICAgaWYgKG5ld0VsZW1lbnRJZCkge1xyXG4gICAgICB0aGlzLmVsZW1lbnQuaWQgPSBuZXdFbGVtZW50SWQ7XHJcbiAgICB9XHJcbiAgICB0aGlzLmF0dGFjaChwb3NpdGlvbik7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGF0dGFjaChwb3NpdGlvbjogRWxlbWVudFBvc2l0aW9uKSB7XHJcbiAgICB0aGlzLmhvc3RFbGVtZW50Lmluc2VydEFkamFjZW50RWxlbWVudChwb3NpdGlvbiwgdGhpcy5lbGVtZW50KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvcFVwO1xyXG4iLCJleHBvcnQgZnVuY3Rpb24gZmV0Y2hJdGVtczxUPih1cmw6IHN0cmluZyk6IFByb21pc2U8VD4ge1xyXG4gIHJldHVybiBmZXRjaCh1cmwpXHJcbiAgICAudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXNUZXh0KTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpLnRoZW4oKGRhdGEpID0+IGRhdGEgYXMgVCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH0pO1xyXG59XHJcbiIsImNsYXNzIENob29zYWJsZUl0ZW1XaXRoQnV0dG9uIHtcclxuICBob3N0RWxlbWVudDogSFRNTERpdkVsZW1lbnQ7XHJcbiAgZGl2RWxlbWVudDogSFRNTERpdkVsZW1lbnQ7XHJcbiAgcEVsZW1lbnQ6IEhUTUxQYXJhZ3JhcGhFbGVtZW50O1xyXG4gIGxpbmtFbGVtZW50OiBIVE1MQW5jaG9yRWxlbWVudDtcclxuICBidXR0b25FbGVtZW50OiBIVE1MQnV0dG9uRWxlbWVudDtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBob3N0RWxlbWVudElkOiBzdHJpbmcsXHJcbiAgICBwQ29udGVudDogc3RyaW5nLFxyXG4gICAgbGlua0NvbnRlbnQ6IHN0cmluZyxcclxuICAgIGxpbmtVcmw6IHN0cmluZyxcclxuICAgIGNhbGxiYWNrRm46IGFueSxcclxuICAgIGRpdkNsYXNzPzogc3RyaW5nLFxyXG4gICAgYnV0dG9uQ2xhc3M/OiBzdHJpbmcsXHJcbiAgICBidXR0b25JZD86IHN0cmluZ1xyXG4gICkge1xyXG4gICAgdGhpcy5ob3N0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gICAgICBob3N0RWxlbWVudElkXHJcbiAgICApISBhcyBIVE1MRGl2RWxlbWVudDtcclxuICAgIHRoaXMuZGl2RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICB0aGlzLnBFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgICB0aGlzLmxpbmtFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XHJcbiAgICB0aGlzLmJ1dHRvbkVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gICAgaWYgKGRpdkNsYXNzKSB7XHJcbiAgICAgIHRoaXMuZGl2RWxlbWVudC5jbGFzc0xpc3QuYWRkKGRpdkNsYXNzKTtcclxuICAgICAgdGhpcy5kaXZFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ1bmJsdXJyZWRcIik7XHJcbiAgICB9XHJcbiAgICB0aGlzLnBFbGVtZW50LmlubmVySFRNTCA9IHBDb250ZW50O1xyXG4gICAgdGhpcy5wRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwidW5ibHVycmVkXCIpO1xyXG4gICAgdGhpcy5saW5rRWxlbWVudC5pbm5lckhUTUwgPSBsaW5rQ29udGVudDtcclxuICAgIHRoaXMubGlua0VsZW1lbnQuaHJlZiA9IGxpbmtVcmw7XHJcbiAgICB0aGlzLmxpbmtFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ1bmJsdXJyZWRcIik7XHJcbiAgICBpZiAoYnV0dG9uQ2xhc3MpIHtcclxuICAgICAgdGhpcy5idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQoYnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLmJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInVuYmx1cnJlZFwiKTtcclxuICAgIH1cclxuICAgIGlmIChidXR0b25JZCkge1xyXG4gICAgICB0aGlzLmJ1dHRvbkVsZW1lbnQuaWQgPSBidXR0b25JZDtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmJ1dHRvbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGNhbGxiYWNrRm4pO1xyXG5cclxuICAgIHRoaXMuaG9zdEVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5kaXZFbGVtZW50KTtcclxuICAgIHRoaXMuZGl2RWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLnBFbGVtZW50KTtcclxuICAgIHRoaXMucEVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5saW5rRWxlbWVudCk7XHJcbiAgICB0aGlzLmRpdkVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5idXR0b25FbGVtZW50KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENob29zYWJsZUl0ZW1XaXRoQnV0dG9uO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9